{"ast":null,"code":"var _jsxFileName = \"/home/h44m7d/react/src/App.jsx\",\n  _s = $RefreshSig$();\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [showAdd, setShowAdd] = useState(false);\n  const [showRes, setShoeRes] = useState(false);\n  useEffect(() => {\n    // const getTasks = async ()=>{\n    //   const tasksFromServer = await fetchTasks()\n    //   setTasks(tasksFromServer)\n    // }\n    // getTasks()\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n      console.log(data);\n      return data;\n    };\n    fetchTasks();\n  }, []);\n\n  // add Task\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 1000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  };\n  // delete \n  const deleteBtn = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n    console.log(id);\n  };\n  // toggle Reminder\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id == id ? {\n      ...task,\n      reminder: !task.reminder\n    } : task));\n    console.log(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Tracker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        add: () => setShowAdd(!showAdd),\n        app: () => setShoeRes(!showRes),\n        show: showAdd,\n        wash: showRes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), showAdd && /*#__PURE__*/_jsxDEV(AddTask, {\n        onAdd: addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"right\",\n      children: showRes && /*#__PURE__*/_jsxDEV(Tasks, {\n        onToggle: toggleReminder,\n        tasks: tasks,\n        onDelete: deleteBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"txjBbxaEkpN0I/5xDHUkKTatXDc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Tasks","useState","useEffect","AddTask","App","tasks","setTasks","showAdd","setShowAdd","showRes","setShoeRes","fetchTasks","res","fetch","data","json","console","log","addTask","task","id","Math","floor","random","newTask","deleteBtn","filter","toggleReminder","map","reminder"],"sources":["/home/h44m7d/react/src/App.jsx"],"sourcesContent":["import Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport { useState,useEffect } from \"react\"\nimport AddTask from \"./components/AddTask\"\nconst App = () => {\n  const [tasks,setTasks]=useState([])\nconst [showAdd , setShowAdd]=useState(false)\nconst [showRes , setShoeRes]=useState(false)\n\nuseEffect(()=>{\n  // const getTasks = async ()=>{\n  //   const tasksFromServer = await fetchTasks()\n  //   setTasks(tasksFromServer)\n  // }\n  // getTasks()\n  const fetchTasks = async () => {\n    const res= await fetch('http://localhost:5000/tasks')\n    const data= await res.json()\n    console.log(data)\n    return data\n  }\n  fetchTasks()\n},[])\n\n\n// add Task\nconst addTask =(task)=>{\n  const id= Math.floor(Math.random()*1000)+1\n  const newTask= {id,...task}\n  setTasks([...tasks,newTask])\n}\n// delete \nconst deleteBtn= (id) =>{\n   setTasks(tasks.filter((task)=>task.id !== id))\n  console.log(id)\n}\n// toggle Reminder\nconst toggleReminder =(id) =>{\n  setTasks(tasks.map((task)=>task.id == id ?{...task,reminder:!task.reminder}: task ))\n  console.log(id)\n}\n\n  return (\n    <div className=\"container\">       \n      <aside className=\"left\"> \n      <h1>\n        Task Tracker \n      </h1>\n      \n      </aside>\n      <main className=\"main\">\n      <Header add={()=>setShowAdd(!showAdd)} app={()=>setShoeRes(!showRes)} show={showAdd} wash={showRes}/>\n      \n      {showAdd && <AddTask onAdd={addTask}/>}\n      </main>\n      <aside className=\"right\">\n      {showRes &&<Tasks  onToggle={toggleReminder} tasks={tasks} onDelete={deleteBtn} />}  \n      \n      </aside>\n    \n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}